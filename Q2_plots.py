import matplotlib.pyplot as plt

# DFT values
dft_values = [
    (1.991343, 0.000000), (-2.029988, 0.000000), (1.990967, -0.000000), (-2.030759, -0.000000),
    (1.989763, -0.000000), (-2.032463, -0.000000), (1.987458, 0.000000), (-2.035521, 0.000000),
    (1.983415, 0.000000), (-2.040912, -0.000000), (1.976081, -0.000000), (-2.051225, -0.000000),
    (1.960819, 0.000000), (-2.075688, -0.000000), (1.915966, -0.000000), (-2.183298, -0.000000),
    (0.836066, 0.000000), (0.173488, -0.000000), (0.094857, 0.000000), (0.065160, -0.000000),
    (0.049854, 0.000000), (0.040641, 0.000000), (0.034564, 0.000000), (0.030312, -0.000000),
    (0.027220, 0.000000), (0.024914, 0.000000), (0.023173, 0.000000), (0.021854, -0.000000),
    (0.020866, -0.000000), (0.020148, -0.000000), (0.019660, 0.000000), (0.019377, -0.000000),
    (0.019284, 0.000000), (0.019377, 0.000000), (0.019660, -0.000000), (0.020148, 0.000000),
    (0.020866, -0.000000), (0.021854, 0.000000), (0.023173, 0.000000), (0.024914, 0.000000),
    (0.027220, 0.000000), (0.030312, 0.000000), (0.034564, 0.000000), (0.040641, 0.000000),
    (0.049854, 0.000000), (0.065160, 0.000000), (0.094857, -0.000000), (0.173488, 0.000000),
    (0.836066, 0.000000), (-2.183298, -0.000000), (1.915966, -0.000000), (-2.075688, 0.000000),
    (1.960819, 0.000000), (-2.051225, 0.000000), (1.976081, 0.000000), (-2.040912, 0.000000),
    (1.983415, 0.000000), (-2.035521, -0.000000), (1.987458, -0.000000), (-2.032463, 0.000000),
    (1.989763, -0.000000), (-2.030759, 0.000000), (1.990967, 0.000000), (-2.029988, 0.000000)
]

# Analytical Fourier Transform of sinc function
analytical_values = [1.253314] * len(dft_values)

# Separate real and imaginary parts for plotting
dft_real = [x[0] for x in dft_values]
dft_imag = [x[1] for x in dft_values]

# Plot DFT values
plt.figure(figsize=(10, 6))
plt.plot(dft_real, label='DFT Real')
plt.plot(dft_imag, label='DFT Imaginary')
plt.plot(analytical_values, label='Analytical Fourier Transform')
plt.xlabel('Index')
plt.ylabel('Value')
plt.title('DFT Values and Analytical Fourier Transform')
plt.legend()
plt.grid(True)
plt.show()

